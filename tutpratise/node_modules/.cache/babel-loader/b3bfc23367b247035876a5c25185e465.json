{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node_Express_Js\\\\React_JS\\\\reacttut\\\\tutpratise\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst slotM = () => {\n  let x = 1;\n  let y = 1;\n  let z = 1;\n\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is Matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is Not Matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n};\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\": Welcome to \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Slot Machine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"slotM\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Node_Express_Js/React_JS/reacttut/tutpratise/src/App.jsx"],"names":["React","slotM","x","y","z","App","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;;AAEA,MAAKF,CAAC,KAAKC,CAAP,IAAcA,CAAC,KAAKC,CAAxB,EAA4B;AAC1B,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,gCACE;AAAA,qBAAKF,CAAL,OAASC,CAAT,OAAaC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AASD,GAVD,MAWI;AACF,wBACE;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,gCACA;AAAA,qBAAKF,CAAL,OAASC,CAAT,OAAaC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAQD;AACF,CA1BD;;AA4BA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE;AAAA,4BACE;AAAA,+CAAiB;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAQD,CATD;;KAAMD,G;AAWN,eAAeA,GAAf","sourcesContent":["import React from 'react'\n\nconst slotM = () => {\n  let x = 1\n  let y = 1\n  let z = 1\n\n  if ((x === y) && (y === z)) {\n    return (\n      <>\n        <div className=\"\">\n          <h1>{x} {y} {z} </h1>\n          <h1>This is Matching</h1>\n\n        </div>\n      </>\n    )\n  }\n  else{\n    return(\n      <>\n      <div className=\"\">\n      <h1>{x} {y} {z} </h1>\n          <h1>This is Not Matching</h1>\n      </div>\n      </>\n    )\n  }\n};\n\nconst App = () => {\n  return (\n    <>\n      <h1>: Welcome to <span style={{ color: \"red\" }}>Slot Machine</span></h1>\n\n      <slotM />\n\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}