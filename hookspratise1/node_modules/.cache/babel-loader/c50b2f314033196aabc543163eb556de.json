{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node_Express_Js\\\\React_JS\\\\reacttut\\\\hookspratise1\\\\src\\\\UseState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UseState = () => {\n  _s();\n\n  const [state, setstate] = useState(\"hii\");\n\n  const changedata = () => {\n    if (state === \"hii\") {\n      setstate(\"welcome shubham\");\n    } else {\n      setstate(\"hii\");\n    }\n  };\n\n  const [incvalue, setIncvalue] = useState(0);\n\n  const increment = () => {\n    setIncvalue(incvalue + 1);\n  };\n\n  const Decrement = () => {\n    if (incvalue >= 1) {\n      setIncvalue(incvalue - 1);\n    }\n  };\n\n  let date = new Date().toLocaleTimeString();\n  const [clock, setClock] = useState(date);\n\n  const clockfunction = () => {\n    date = new Date().toLocaleTimeString();\n    setClock(date);\n  };\n\n  setInterval(clockfunction, 1000);\n  const [changestring, setchangestring] = useState(\"shubham\");\n  const [bg, setbg] = useState(\"red\");\n\n  const changeColour = () => {\n    if (changestring == \"shubham\") {\n      setchangestring(\"chaudhari\");\n      setbg(\"purple\");\n    } else {\n      setchangestring(\"shubham\");\n      setbg(\"red\");\n    }\n  };\n\n  const biodata = [{\n    id: 1,\n    name: \"shubham\",\n    age: \"26\"\n  }, {\n    id: 2,\n    name: \"vaibhav\",\n    age: \"27\"\n  }, {\n    id: 3,\n    name: \"dhanjay\",\n    age: \"28\"\n  }];\n  const [myarray, setMyarray] = useState(biodata);\n\n  const cleardata = () => {\n    setMyarray([]);\n  };\n\n  const [changeData, setChangeData] = useState({\n    myname: \"shubham\",\n    myage: 26,\n    rollno: \"07\"\n  });\n\n  const updateData = () => {\n    setChangeData({ ...changeData,\n      myname: \"vaibhav\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changedata,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: incvalue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Decrement,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: clock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clockfunction,\n      children: \"clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: bg\n      },\n      children: changestring\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeColour,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), myarray.map(value => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"my name is \", value.name, \" and age is \", value.age, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"click me \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true);\n    }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: cleardata,\n      children: \"clcik me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"my name is \", changeData.myname, \" and age is \", changeData.myage, \" and rollNo is \", changeData.rollno, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateData,\n      children: \"clcik me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UseState, \"45xVPBNw/X/q/h2FGBiOBsSgXXI=\");\n\n_c = UseState;\nexport default UseState;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseState\");","map":{"version":3,"sources":["D:/Node_Express_Js/React_JS/reacttut/hookspratise1/src/UseState.js"],"names":["React","useState","UseState","state","setstate","changedata","incvalue","setIncvalue","increment","Decrement","date","Date","toLocaleTimeString","clock","setClock","clockfunction","setInterval","changestring","setchangestring","bg","setbg","changeColour","biodata","id","name","age","myarray","setMyarray","cleardata","changeData","setChangeData","myname","myage","rollno","updateData","color","map","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst UseState = () => {\r\n\r\n    const [state, setstate] = useState(\"hii\")\r\n\r\n    const changedata = () => {\r\n        if (state === \"hii\") {\r\n            setstate(\"welcome shubham\")\r\n        }\r\n        else {\r\n            setstate(\"hii\")\r\n        }\r\n    }\r\n\r\n    const [incvalue, setIncvalue] = useState(0)\r\n\r\n    const increment = () => {\r\n\r\n        setIncvalue(incvalue + 1)\r\n    }\r\n\r\n    const Decrement = () => {\r\n        if (incvalue >= 1) {\r\n\r\n            setIncvalue(incvalue - 1)\r\n        }\r\n    }\r\n\r\n    let date = new Date().toLocaleTimeString()\r\n    const [clock, setClock] = useState(date)\r\n\r\n    const clockfunction = () => {\r\n        date = new Date().toLocaleTimeString()\r\n        setClock(date)\r\n    }\r\n\r\n    setInterval(clockfunction, 1000)\r\n\r\n    const [changestring, setchangestring] = useState(\"shubham\")\r\n    const [bg, setbg] = useState(\"red\")\r\n\r\n\r\n    const changeColour = () => {\r\n\r\n        if (changestring == \"shubham\") {\r\n            setchangestring(\"chaudhari\")\r\n            setbg(\"purple\")\r\n        }\r\n        else {\r\n            setchangestring(\"shubham\")\r\n            setbg(\"red\")\r\n        }\r\n    }\r\n\r\n    const biodata = [\r\n        { id: 1, name: \"shubham\", age: \"26\" },\r\n        { id: 2, name: \"vaibhav\", age: \"27\" },\r\n        { id: 3, name: \"dhanjay\", age: \"28\" },\r\n    ]\r\n\r\n    const [myarray, setMyarray] = useState(biodata)\r\n    const cleardata = () => {\r\n        setMyarray([])\r\n    }\r\n\r\n    const [changeData, setChangeData] = useState({\r\n        myname: \"shubham\", myage: 26, rollno: \"07\"\r\n    })\r\n\r\n    const updateData = () => {\r\n\r\n        setChangeData({ ...changeData, myname: \"vaibhav\" })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>{state}</h1>\r\n            <button onClick={changedata}>click me</button>\r\n\r\n            <h1>{incvalue}</h1>\r\n            <button onClick={increment} >Click me</button>\r\n            <button onClick={Decrement} >Click me</button>\r\n\r\n            <h1>{clock}</h1>\r\n            <button onClick={clockfunction} >clock</button>\r\n\r\n            <h1 style={{ color: bg }} >{changestring}</h1>\r\n            <button onClick={changeColour} >click me</button>\r\n\r\n            {\r\n                myarray.map((value) => {\r\n                    return (\r\n                        <>\r\n                            <h1>my name is {value.name} and age is {value.age} </h1>\r\n                            <button >click me </button>\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n            <br />\r\n            <button onClick={cleardata}>clcik me</button>\r\n\r\n\r\n            <h1>my name is {changeData.myname} and age is {changeData.myage} and rollNo is {changeData.rollno} </h1>\r\n            <button onClick={updateData} >clcik me</button>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UseState\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}