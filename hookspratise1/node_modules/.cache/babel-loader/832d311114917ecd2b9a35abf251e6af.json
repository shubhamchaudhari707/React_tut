{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node_Express_Js\\\\React_JS\\\\reacttut\\\\hookspratise1\\\\src\\\\UseReducer1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialState = 0;\n\nconst reducer = (state, action) => {\n  return state;\n};\n\nconst UseReducer1 = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UseReducer1, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = UseReducer1;\nexport default UseReducer1;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseReducer1\");","map":{"version":3,"sources":["D:/Node_Express_Js/React_JS/reacttut/hookspratise1/src/UseReducer1.js"],"names":["React","useReducer","initialState","reducer","state","action","UseReducer1","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,IAAIC,YAAY,GAAG,CAAnB;;AACA,MAAMC,OAAO,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAC5B,SAAOD,KAAP;AACH,CAFD;;AAIA,MAAME,WAAW,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBN,UAAU,CAACE,OAAD,EAAUD,YAAV,CAApC;AAEI,sBACI;AAAA,4BACG;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHH;AAAA,kBADJ;AAOH,CAXD;;GAAME,W;;KAAAA,W;AAaN,eAAeA,WAAf","sourcesContent":["import React, { useReducer } from 'react'\r\n\r\nlet initialState = 0\r\nconst reducer =(state, action)=>{\r\n    return state\r\n}\r\n\r\nconst UseReducer1 = () => {\r\n\r\nconst [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    return (\r\n        <>\r\n           <h1>{state}</h1>\r\n           <button>+</button>\r\n           <button>-</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UseReducer1\r\n"]},"metadata":{},"sourceType":"module"}